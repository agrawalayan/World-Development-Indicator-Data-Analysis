{"paragraphs":[{"title":"","text":"%md\n## Who is likely to become next superpower\n#### Comparing between China and Russia as a competing nation against USA\n#### DataSet Used - World Development Indicators - https://data.world/worldbank/world-development-indicators\n##### 6 Domains taken into consideration to carry out the analysis\n###### 1) Economy\n###### 2) Employment\n###### 3) Demography\n###### 4) Health\n###### 5) Energy\n###### 6) Trade\n\n##### For our Analysis purpose we demonstrate using pyspark as the interpreter of Zeppelin","user":"nbuser","dateUpdated":"2018-12-19T08:10:01-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","title":false,"editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Who is likely to become next superpower</h2>\n<h4>Comparing between China and Russia as to competing with USA</h4>\n<h4>DataSet Used - World Development Indicators</h4>\n<h5>6 Domains taken into consideration to carry out the analysis</h5>\n<h6>1) Economy</h6>\n<h6>2) Employment</h6>\n<h6>3) Demography</h6>\n<h6>4) Health</h6>\n<h6>5) Energy</h6>\n<h6>6) Trade</h6>\n<h5>After carefully analysing the data based on visualization we will use linear regression model to predict who is likely to become next superpower</h5>\n<h5>For our Analysis purpose we demonstrate using Spark, SQL and For prediction purpose we use Spark ML Library</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1545147373851_-1940602484","id":"20181218-103613_62847928","dateCreated":"2018-12-18T10:36:13-0500","dateStarted":"2018-12-18T13:35:15-0500","dateFinished":"2018-12-18T13:35:17-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:204"},{"text":"%pyspark\nfrom pyspark.sql import Row\nfrom pyspark.sql import DataFrame\nfrom pyspark.sql.types import StructType\nfrom pyspark.sql.functions import col,lit\nfrom collections import OrderedDict\nimport requests\nimport json\nfrom functools import reduce\n\n\nelementAttributes = [\"CountryName\", \"CountryCode\", \"IndicatorName\", \"IndicatorCode\", \"Year\", \"Value\"]\n\ndef convert_to_row(d):\n    return Row(**OrderedDict(sorted(d.items())))\n\nconvert_to_row.__annotations__ = {'d':dict, 'return': Row}\n\n\n##Fetching element data from mongoDB\nelementsDf=spark.read.format(\"com.mongodb.spark.sql\").option(\"collection\",\"element\").load()\n##Fetching element summary (every player json) data from mongoDB\nIndicator_df=spark.read.format(\"com.mongodb.spark.sql\").option(\"collection\",\"elementSummary\").load()\n\n\nelementsDfColumns = elementsDf.columns\ndroppedColumns = [item for item in elementsDfColumns if item not in elementAttributes]\nelementsDf=elementsDf.drop(*droppedColumns)\n\n\nallPlayerColumns=Indicator_df.columns\nIndicator_df=Indicator_df.drop(*droppedColumns)\n\n##Joining and processing the 2 dataframes\nIndicator_df = elementsDf.join(Indicator_df,'CountryCode')","user":"nbuser","dateUpdated":"2018-12-19T08:21:13-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1545225164614_-61576375","id":"20181219-081244_289882943","dateCreated":"2018-12-19T08:12:44-0500","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2092","title":"Loading Data"},{"title":"Loading the Data","text":"%pyspark\nimport pyspark\nfrom pyspark.sql import SQLContext\nsqlContext = SQLContext(spark)\nIndicator_df = spark.read.csv(\"Project/Dataset/Indicators.csv\", header=\"True\")","user":"nbuser","dateUpdated":"2018-12-19T08:16:51-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1544898457495_-838704251","id":"20181215-132737_90139451","dateCreated":"2018-12-15T13:27:37-0500","dateStarted":"2018-12-18T13:42:26-0500","dateFinished":"2018-12-18T13:43:06-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:205"},{"title":"Displaying the Data","text":"%pyspark\nIndicator_df.show()","user":"nbuser","dateUpdated":"2018-12-18T13:43:17-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+-----------+--------------------+-----------------+----+------------------+\n|CountryName|CountryCode|       IndicatorName|    IndicatorCode|Year|             Value|\n+-----------+-----------+--------------------+-----------------+----+------------------+\n| Arab World|        ARB|Adolescent fertil...|      SP.ADO.TFRT|1960|133.56090740552298|\n| Arab World|        ARB|Age dependency ra...|      SP.POP.DPND|1960|  87.7976011532547|\n| Arab World|        ARB|Age dependency ra...|   SP.POP.DPND.OL|1960| 6.634579191565161|\n| Arab World|        ARB|Age dependency ra...|   SP.POP.DPND.YG|1960| 81.02332950839141|\n| Arab World|        ARB|Arms exports (SIP...|   MS.MIL.XPRT.KD|1960|         3000000.0|\n| Arab World|        ARB|Arms imports (SIP...|   MS.MIL.MPRT.KD|1960|       538000000.0|\n| Arab World|        ARB|Birth rate, crude...|   SP.DYN.CBRT.IN|1960|47.697888095096395|\n| Arab World|        ARB|  CO2 emissions (kt)|   EN.ATM.CO2E.KT|1960|  59563.9892169935|\n| Arab World|        ARB|CO2 emissions (me...|   EN.ATM.CO2E.PC|1960|0.6439635478877049|\n| Arab World|        ARB|CO2 emissions fro...|EN.ATM.CO2E.GF.ZS|1960| 5.041291753975099|\n| Arab World|        ARB|CO2 emissions fro...|EN.ATM.CO2E.LF.ZS|1960|  84.8514729446567|\n| Arab World|        ARB|CO2 emissions fro...|EN.ATM.CO2E.LF.KT|1960|49541.707291032304|\n| Arab World|        ARB|CO2 emissions fro...|EN.ATM.CO2E.SF.ZS|1960|  4.72698138789597|\n| Arab World|        ARB|Death rate, crude...|   SP.DYN.CDRT.IN|1960|  19.7544519237187|\n| Arab World|        ARB|Fertility rate, t...|   SP.DYN.TFRT.IN|1960|  6.92402738655897|\n| Arab World|        ARB|Fixed telephone s...|      IT.MLT.MAIN|1960|          406833.0|\n| Arab World|        ARB|Fixed telephone s...|   IT.MLT.MAIN.P2|1960|   0.6167005703199|\n| Arab World|        ARB|Hospital beds (pe...|   SH.MED.BEDS.ZS|1960|1.9296220724398703|\n| Arab World|        ARB|International mig...|   SM.POP.TOTL.ZS|1960|2.9906371279862403|\n| Arab World|        ARB|International mig...|      SM.POP.TOTL|1960|         3324685.0|\n+-----------+-----------+--------------------+-----------------+----+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1544898916223_348091743","id":"20181215-133516_876681293","dateCreated":"2018-12-15T13:35:16-0500","dateStarted":"2018-12-18T13:43:17-0500","dateFinished":"2018-12-18T13:43:18-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:206"},{"title":"Converting a csv data into table format","text":"%pyspark\nIndicator_df.registerTempTable('IndicatorTable')\nindicators = sqlContext.sql('select * from IndicatorTable')\nindicators.show()","user":"nbuser","dateUpdated":"2018-12-18T13:43:23-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+-----------+--------------------+-----------------+----+------------------+\n|CountryName|CountryCode|       IndicatorName|    IndicatorCode|Year|             Value|\n+-----------+-----------+--------------------+-----------------+----+------------------+\n| Arab World|        ARB|Adolescent fertil...|      SP.ADO.TFRT|1960|133.56090740552298|\n| Arab World|        ARB|Age dependency ra...|      SP.POP.DPND|1960|  87.7976011532547|\n| Arab World|        ARB|Age dependency ra...|   SP.POP.DPND.OL|1960| 6.634579191565161|\n| Arab World|        ARB|Age dependency ra...|   SP.POP.DPND.YG|1960| 81.02332950839141|\n| Arab World|        ARB|Arms exports (SIP...|   MS.MIL.XPRT.KD|1960|         3000000.0|\n| Arab World|        ARB|Arms imports (SIP...|   MS.MIL.MPRT.KD|1960|       538000000.0|\n| Arab World|        ARB|Birth rate, crude...|   SP.DYN.CBRT.IN|1960|47.697888095096395|\n| Arab World|        ARB|  CO2 emissions (kt)|   EN.ATM.CO2E.KT|1960|  59563.9892169935|\n| Arab World|        ARB|CO2 emissions (me...|   EN.ATM.CO2E.PC|1960|0.6439635478877049|\n| Arab World|        ARB|CO2 emissions fro...|EN.ATM.CO2E.GF.ZS|1960| 5.041291753975099|\n| Arab World|        ARB|CO2 emissions fro...|EN.ATM.CO2E.LF.ZS|1960|  84.8514729446567|\n| Arab World|        ARB|CO2 emissions fro...|EN.ATM.CO2E.LF.KT|1960|49541.707291032304|\n| Arab World|        ARB|CO2 emissions fro...|EN.ATM.CO2E.SF.ZS|1960|  4.72698138789597|\n| Arab World|        ARB|Death rate, crude...|   SP.DYN.CDRT.IN|1960|  19.7544519237187|\n| Arab World|        ARB|Fertility rate, t...|   SP.DYN.TFRT.IN|1960|  6.92402738655897|\n| Arab World|        ARB|Fixed telephone s...|      IT.MLT.MAIN|1960|          406833.0|\n| Arab World|        ARB|Fixed telephone s...|   IT.MLT.MAIN.P2|1960|   0.6167005703199|\n| Arab World|        ARB|Hospital beds (pe...|   SH.MED.BEDS.ZS|1960|1.9296220724398703|\n| Arab World|        ARB|International mig...|   SM.POP.TOTL.ZS|1960|2.9906371279862403|\n| Arab World|        ARB|International mig...|      SM.POP.TOTL|1960|         3324685.0|\n+-----------+-----------+--------------------+-----------------+----+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1544901787716_1282180518","id":"20181215-142307_941524830","dateCreated":"2018-12-15T14:23:07-0500","dateStarted":"2018-12-18T13:43:23-0500","dateFinished":"2018-12-18T13:43:24-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:207"},{"text":"%pyspark\nprint(type(indicators))","user":"nbuser","dateUpdated":"2018-12-18T13:43:29-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.sql.dataframe.DataFrame'>\n"}]},"apps":[],"jobName":"paragraph_1544901920137_93073265","id":"20181215-142520_1228387567","dateCreated":"2018-12-15T14:25:20-0500","dateStarted":"2018-12-18T13:43:29-0500","dateFinished":"2018-12-18T13:43:29-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:208"},{"title":"Selecting the required column from data","text":"%pyspark\nindicators_list  = indicators.select('IndicatorName','IndicatorCode').dropDuplicates()\nindicators_list.show()\nprint(indicators_list.count())","user":"nbuser","dateUpdated":"2018-12-18T13:43:33-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----------------+\n|       IndicatorName|    IndicatorCode|\n+--------------------+-----------------+\n|Merchandise expor...|TX.VAL.MRCH.AL.ZS|\n|PNG, commercial b...|   DT.AMT.PNGC.CD|\n|PPG, bilateral co...|   DT.DOD.BLTC.CD|\n|Export volume ind...|TX.QTY.MRCH.XD.WD|\n|Unemployment with...|SL.UEM.TERT.MA.ZS|\n|Net change in int...|DT.IXA.DPPG.CD.CG|\n|External balance ...|   NE.RSB.GNFS.KN|\n|International tou...|      ST.INT.ARVL|\n|Primary to second...|SE.SEC.PROG.MA.ZS|\n|Net bilateral aid...|   DC.DAC.ITAL.CD|\n|Adjusted net enro...|      SE.PRM.TENR|\n|CPIA economic man...|   IQ.CPA.ECON.XQ|\n|Firms competing a...|   IC.FRM.CMPU.ZS|\n|Labor tax and con...|IC.TAX.LABR.CP.ZS|\n|External debt sto...|   DT.DOD.PUBS.CD|\n|Gross enrolment r...|      SE.PRE.ENRR|\n|Gross enrolment r...|   SE.PRM.ENRR.MA|\n|Intentional homic...|   VC.IHR.PSRC.P5|\n|Net bilateral aid...|   DC.DAC.DNKL.CD|\n|Net bilateral aid...|   DC.DAC.GBRL.CD|\n+--------------------+-----------------+\nonly showing top 20 rows\n\n1344\n"}]},"apps":[],"jobName":"paragraph_1544920340083_-1581579393","id":"20181215-193220_2065083613","dateCreated":"2018-12-15T19:32:20-0500","dateStarted":"2018-12-18T13:43:33-0500","dateFinished":"2018-12-18T13:43:52-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:209"},{"title":"Preprocessing the data","text":"%pyspark\nfrom pyspark.sql.functions import regexp_replace, col,lower,split\nindicators_list = indicators_list.withColumn('IndicatorCode',regexp_replace(col('IndicatorCode'), ' ',\"\"))\nindicators_list = indicators_list.withColumn('IndicatorName',regexp_replace(col('IndicatorName'), '[,()]',\"\"))\nindicators_list = indicators_list.withColumn('IndicatorName',lower(col('IndicatorName')))\nindicators_list = indicators_list.withColumn('IndicatorName',regexp_replace(col('IndicatorName'), '-',\" to \"))\nindicators_list.show()\nprint(indicators_list.count())","user":"nbuser","dateUpdated":"2018-12-18T13:44:02-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----------------+\n|       IndicatorName|    IndicatorCode|\n+--------------------+-----------------+\n|export volume ind...|TX.QTY.MRCH.XD.WD|\n|merchandise expor...|TX.VAL.MRCH.AL.ZS|\n|unemployment with...|SL.UEM.TERT.MA.ZS|\n|net change in int...|DT.IXA.DPPG.CD.CG|\n|png commercial ba...|   DT.AMT.PNGC.CD|\n|ppg bilateral con...|   DT.DOD.BLTC.CD|\n|external balance ...|   NE.RSB.GNFS.KN|\n|international tou...|      ST.INT.ARVL|\n|net bilateral aid...|   DC.DAC.ITAL.CD|\n|primary to second...|SE.SEC.PROG.MA.ZS|\n|adjusted net enro...|      SE.PRM.TENR|\n|cpia economic man...|   IQ.CPA.ECON.XQ|\n|firms competing a...|   IC.FRM.CMPU.ZS|\n|labor tax and con...|IC.TAX.LABR.CP.ZS|\n|net bilateral aid...|   DC.DAC.GBRL.CD|\n|net bilateral aid...|   DC.DAC.DNKL.CD|\n|gross enrolment r...|      SE.PRE.ENRR|\n|gross enrolment r...|   SE.PRM.ENRR.MA|\n|external debt sto...|   DT.DOD.PUBS.CD|\n|intentional homic...|   VC.IHR.PSRC.P5|\n+--------------------+-----------------+\nonly showing top 20 rows\n\n1344\n"}]},"apps":[],"jobName":"paragraph_1544964465431_-1165558113","id":"20181216-074745_1554670577","dateCreated":"2018-12-16T07:47:45-0500","dateStarted":"2018-12-18T13:44:03-0500","dateFinished":"2018-12-18T13:44:20-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:210"},{"title":"Considering the important annotations required for data analysis","text":"%pyspark\nkey_word_dict = {}\n\nkey_word_dict['Demography'] = ['population','birth','death','fertility','mortality','expectancy']\nkey_word_dict['Trade'] = ['trade','import','export','good','shipping','shipment']\nkey_word_dict['Health'] = ['health','desease','hospital','mortality','doctor']\nkey_word_dict['Economy'] = ['income','gdp','gini','deficit','budget','market','stock','bond','infrastructure','debt']\nkey_word_dict['Energy'] = ['fuel','energy','power','emission','electric','electricity']\nkey_word_dict['Education'] = ['education','literacy','youth']\nkey_word_dict['Employment'] =['employed','employment','umemployed','unemployment']","user":"nbuser","dateUpdated":"2018-12-18T13:44:18-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1544971854234_1975701521","id":"20181216-095054_319122767","dateCreated":"2018-12-16T09:50:54-0500","dateStarted":"2018-12-18T13:44:18-0500","dateFinished":"2018-12-18T13:44:20-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:211"},{"title":"Selecting China, Russia and USA from data for comparison purpose","text":"%pyspark\ndf_CRU = Indicator_df[(Indicator_df['CountryCode'] == 'CHN') | (Indicator_df['CountryCode'] == 'RUS') | (Indicator_df['CountryCode'] == 'USA')]\ndf_CRU.show()","user":"nbuser","dateUpdated":"2018-12-18T13:44:26-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+-----------+--------------------+-----------------+----+------------------+\n|CountryName|CountryCode|       IndicatorName|    IndicatorCode|Year|             Value|\n+-----------+-----------+--------------------+-----------------+----+------------------+\n|      China|        CHN|Adolescent fertil...|      SP.ADO.TFRT|1960|           68.0332|\n|      China|        CHN|Age dependency ra...|      SP.POP.DPND|1960|    77.32207237117|\n|      China|        CHN|Age dependency ra...|   SP.POP.DPND.OL|1960|  6.47253502077037|\n|      China|        CHN|Age dependency ra...|   SP.POP.DPND.YG|1960|  70.8495373503997|\n|      China|        CHN|Agriculture, valu...|   NV.AGR.TOTL.ZS|1960|  23.3836650652025|\n|      China|        CHN|Agriculture, valu...|   NV.AGR.TOTL.KD|1960|  40698086607.1251|\n|      China|        CHN|Agriculture, valu...|   NV.AGR.TOTL.KN|1960|    270777652400.0|\n|      China|        CHN|Agriculture, valu...|   NV.AGR.TOTL.CN|1960|     34070000000.0|\n|      China|        CHN|Agriculture, valu...|   NV.AGR.TOTL.CD|1960|  13839415571.5865|\n|      China|        CHN|Arms exports (SIP...|   MS.MIL.XPRT.KD|1960|       285000000.0|\n|      China|        CHN|Arms imports (SIP...|   MS.MIL.MPRT.KD|1960|      2431000000.0|\n|      China|        CHN|Birth rate, crude...|   SP.DYN.CBRT.IN|1960|             20.86|\n|      China|        CHN|Changes in invent...|   NE.GDI.STKB.CN|1960|     10200000000.0|\n|      China|        CHN|Changes in invent...|   NE.GDI.STKB.CD|1960|4143294359.5592103|\n|      China|        CHN|CO2 emissions (kg...|EN.ATM.CO2E.KD.GD|1960|  9.65728249976122|\n|      China|        CHN|  CO2 emissions (kt)|   EN.ATM.CO2E.KT|1960|        780726.302|\n|      China|        CHN|CO2 emissions (me...|   EN.ATM.CO2E.PC|1960|  1.17038137226978|\n|      China|        CHN|CO2 emissions fro...|EN.ATM.CO2E.GF.ZS|1960| 0.255511822118682|\n|      China|        CHN|CO2 emissions fro...|EN.ATM.CO2E.GF.KT|1960|          1994.848|\n|      China|        CHN|CO2 emissions fro...|EN.ATM.CO2E.LF.ZS|1960|  2.94731008050501|\n+-----------+-----------+--------------------+-----------------+----+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1544974408637_542514560","id":"20181216-103328_137007758","dateCreated":"2018-12-16T10:33:28-0500","dateStarted":"2018-12-18T13:44:26-0500","dateFinished":"2018-12-18T13:44:26-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:212"},{"title":"Below are the indicator code representing different domains","text":"%pyspark\nchosen_indicators = ['SP.DYN.IMRT.IN','SH.STA.BRTC.ZS','SH.XPD.TOTL.ZS','SL.TLF.0714.ZS', 'SL.UEM.TOTL.ZS','SL.UEM.TOTL.MA.ZS','SL.UEM.TOTL.FE.ZS','SL.GDP.PCAP.EM.KD','SL.EMP.1524.SP.NE.ZS','SL.UEM.1524.NE.ZS','NY.GDP.PCAP.CD','NY.GDP.PCAP.KD','NY.GDP.PCAP.KD.ZG','SL.GDP.PCAP.EM.KD','SI.POV.GINI','SI.DST.10TH.10','SI.DST.FRST.10','GC.DOD.TOTL.GD.ZS','SH.XPD.TOTL.ZS','EN.ATM.CO2E.PC','EG.USE.COMM.CL.ZS','EG.IMP.CONS.ZS','EG.ELC.RNWX.KH','EG.USE.ELEC.KH.PC','EG.ELC.NUCL.ZS','EG.ELC.ACCS.ZS','EG.ELC.ACCS.RU.ZS','EG.ELC.ACCS.UR.ZS','EG.FEC.RNEW.ZS','SP.DYN.CBRT.IN','SP.DYN.CDRT.IN','SP.DYN.LE00.IN','SP.POP.65UP.TO.ZS','SP.POP.1564.TO.ZS','SP.POP.TOTL.FE.ZS','SP.POP.TOTL','SH.DTH.IMRT','SH.DTH.MORT','SP.POP.GROW','SE.ADT.LITR.ZS','SI.POV.NAHC','SH.CON.1524.MA.ZS','SH.STA.DIAB.ZS','NE.IMP.GNFS.ZS','NE.EXP.GNFS.CD','NE.IMP.GNFS.CD','NE.TRD.GNFS.ZS']\n#Health = ['SP.DYN.IMRT.IN','SH.STA.BRTC.ZS','SH.XPD.TOTL.ZS','SL.TLF.0714.ZS']\n#Employment = ['SL.UEM.TOTL.ZS','SL.UEM.TOTL.MA.ZS','SL.UEM.TOTL.FE.ZS','SL.GDP.PCAP.EM.KD','SL.EMP.1524.SP.NE.ZS','SL.UEM.1524.NE.ZS']\n#Economy = ['NY.GDP.PCAP.CD','NY.GDP.PCAP.KD','NY.GDP.PCAP.KD.ZG','SL.GDP.PCAP.EM.KD','SI.POV.GINI','SI.DST.10TH.10','SI.DST.FRST.10','GC.DOD.TOTL.GD.ZS','SH.XPD.TOTL.ZS']\n#Energy = ['EN.ATM.CO2E.PC','EG.USE.COMM.CL.ZS','EG.IMP.CONS.ZS','EG.ELC.RNWX.KH','EG.USE.ELEC.KH.PC','EG.ELC.NUCL.ZS','EG.ELC.ACCS.ZS','EG.ELC.ACCS.RU.ZS','EG.ELC.ACCS.UR.ZS','EG.FEC.RNEW.ZS']\n#Demorgraphy = ['SP.DYN.CBRT.IN','SP.DYN.CDRT.IN','SP.DYN.LE00.IN','SP.POP.65UP.TO.ZS','SP.POP.1564.TO.ZS','SP.POP.TOTL.FE.ZS','SP.POP.TOTL','SH.DTH.IMRT','SH.DTH.MORT','SP.POP.GROW','SE.ADT.LITR.ZS','SI.POV.NAHC','SH.CON.1524.MA.ZS','SH.STA.DIAB.ZS']\n#Trade = ['NE.IMP.GNFS.ZS','NE.EXP.GNFS.CD','NE.IMP.GNFS.CD','NE.TRD.GNFS.ZS']\nprint(len(chosen_indicators))\n\n","user":"nbuser","dateUpdated":"2018-12-18T13:44:33-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"47\n"}]},"apps":[],"jobName":"paragraph_1544974902954_-1307438062","id":"20181216-104142_1221842342","dateCreated":"2018-12-16T10:41:42-0500","dateStarted":"2018-12-18T13:44:33-0500","dateFinished":"2018-12-18T13:44:33-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:213"},{"title":"Extracting relevant data based on the above indicator codes","text":"%pyspark\nfrom pyspark.sql.functions import regexp_replace, col,lower,split\ndf_CRU_subset = df_CRU.filter(col('IndicatorCode').isin(chosen_indicators))\ndf_CRU_subset.show()\nprint(df_CRU_subset.count())\n\n","user":"nbuser","dateUpdated":"2018-12-18T13:44:43-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+-----------+--------------------+-----------------+----+------------------+\n|       CountryName|CountryCode|       IndicatorName|    IndicatorCode|Year|             Value|\n+------------------+-----------+--------------------+-----------------+----+------------------+\n|             China|        CHN|Birth rate, crude...|   SP.DYN.CBRT.IN|1960|             20.86|\n|             China|        CHN|CO2 emissions (me...|   EN.ATM.CO2E.PC|1960|  1.17038137226978|\n|             China|        CHN|Death rate, crude...|   SP.DYN.CDRT.IN|1960|             25.43|\n|             China|        CHN|Exports of goods ...|   NE.EXP.GNFS.CD|1960|  2571279734.90292|\n|             China|        CHN|GDP per capita (c...|   NY.GDP.PCAP.KD|1960|121.19158493072099|\n|             China|        CHN|GDP per capita (c...|   NY.GDP.PCAP.CD|1960|   88.722497622435|\n|             China|        CHN|Imports of goods ...|   NE.IMP.GNFS.ZS|1960|  4.46808510638298|\n|             China|        CHN|Imports of goods ...|   NE.IMP.GNFS.CD|1960|  2644396694.18926|\n|             China|        CHN|Life expectancy a...|   SP.DYN.LE00.IN|1960|  43.4658048780488|\n|             China|        CHN|Population ages 6...|SP.POP.65UP.TO.ZS|1960|  3.65015760496972|\n|             China|        CHN|Population growth...|      SP.POP.GROW|1960|  1.83286768126466|\n|             China|        CHN|Population, ages ...|SP.POP.1564.TO.ZS|1960|  56.3945585285769|\n|             China|        CHN|Population, femal...|SP.POP.TOTL.FE.ZS|1960|  48.5163840587564|\n|             China|        CHN|   Population, total|      SP.POP.TOTL|1960|       667070000.0|\n|             China|        CHN|    Trade (% of GDP)|   NE.TRD.GNFS.ZS|1960|  8.81262868908717|\n|Russian Federation|        RUS|Birth rate, crude...|   SP.DYN.CBRT.IN|1960|            23.743|\n|Russian Federation|        RUS|Death rate, crude...|   SP.DYN.CDRT.IN|1960|             8.293|\n|Russian Federation|        RUS|Life expectancy a...|   SP.DYN.LE00.IN|1960|  66.0552926829268|\n|Russian Federation|        RUS|Population ages 6...|SP.POP.65UP.TO.ZS|1960| 6.085230613785679|\n|Russian Federation|        RUS|Population growth...|      SP.POP.GROW|1960|1.4694965014453198|\n+------------------+-----------+--------------------+-----------------+----+------------------+\nonly showing top 20 rows\n\n4232\n"}]},"apps":[],"jobName":"paragraph_1544975512189_1890681284","id":"20181216-105152_1276691995","dateCreated":"2018-12-16T10:51:52-0500","dateStarted":"2018-12-18T13:44:43-0500","dateFinished":"2018-12-18T13:44:49-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:214"},{"title":"Preparing the data for visulization","text":"%pyspark\ndef stage_prep(indicator):\n        df_stage_china = df_CRU_subset[(df_CRU_subset['CountryCode'] == 'CHN') & (df_CRU_subset['IndicatorCode'] == indicator)]\n        \n        df_stage_russia = df_CRU_subset[(df_CRU_subset['CountryCode'] == 'RUS') & (df_CRU_subset['IndicatorCode'] == indicator)]\n        \n        df_stage_usa = df_CRU_subset[(df_CRU_subset['CountryCode'] == 'USA') & (df_CRU_subset['IndicatorCode'] == indicator)]\n        \n        if((df_stage_china.count()==0) | (df_stage_russia.count()==0) | (df_stage_usa.count()==0)):\n\n            print(\"This indicator is not present in all three countries. Please choose another indicator.\")\n        \n        else:\n            \n            min_year_c = df_stage_china.agg({\"Year\":\"min\"}).collect()[0][0]\n            \n            \n            max_year_c = df_stage_china.agg({\"Year\":\"max\"}).collect()[0][0]\n            \n            min_year_r = df_stage_russia.agg({\"Year\":\"min\"}).collect()[0][0]\n            max_year_r = df_stage_russia.agg({\"Year\":\"max\"}).collect()[0][0]\n            \n            min_year_us = df_stage_usa.agg({\"Year\":\"min\"}).collect()[0][0]\n            max_year_us = df_stage_usa.agg({\"Year\":\"max\"}).collect()[0][0]\n            \n            min_list = [min_year_c, min_year_r,min_year_us]\n            max_among_all_min_years = max(min_list)\n            \n            max_list = [max_year_c,max_year_r,max_year_us]\n            min_among_all_max_years = min(max_list)\n        \n            if( (min_year_c == min_year_r== min_year_us) & (max_year_c == max_year_r == max_year_us)):\n                \n                df_stage = df_CRU_subset[df_CRU_subset['IndicatorCode'] == indicator]\n                \n                return df_stage\n            \n            else:\n                year_and_indicator_filter = ((df_CRU_subset['Year'] >= max_among_all_min_years) & \n                                             (df_CRU_subset['Year'] <= min_among_all_max_years) &\n                                             (df_CRU_subset['IndicatorCode'] == indicator))\n                        \n                df_stage = df_CRU_subset[year_and_indicator_filter] \n                \n                return df_stage\n\n#stage_prep(chosen_indicators[0]).show()        ","user":"nbuser","dateUpdated":"2018-12-18T13:44:57-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1544976463702_-430589861","id":"20181216-110743_1680302442","dateCreated":"2018-12-16T11:07:43-0500","dateStarted":"2018-12-18T13:44:57-0500","dateFinished":"2018-12-18T13:44:58-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:215"},{"text":"%pyspark\nimport plotly \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot\nimport plotly.graph_objs as go","user":"nbuser","dateUpdated":"2018-12-18T13:45:04-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1544979368156_-292299729","id":"20181216-115608_910557663","dateCreated":"2018-12-16T11:56:08-0500","dateStarted":"2018-12-18T13:45:04-0500","dateFinished":"2018-12-18T13:45:05-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:216"},{"title":"Function to plot Bar chart","text":"%pyspark\nimport plotly.plotly as py \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot\nimport plotly.graph_objs as go\n\ndef plot_barchart(df_stages):\n    figure ={\n    'data':[],\n    'layout':{}\n    }\n    \n    # Creating stage for each country\n    df_stages_china = df_stages[df_stages['CountryCode'] == 'CHN']\n    print(\"df_stages_china\")\n    print(df_stages_china.head(5))\n    \n    temp_china_y = []\n    china_y = df_stages_china.select(\"Year\").collect()\n    temp_china_y = [int(i.Year) for i in china_y]\n    print(\"temp_china_y\")\n    print(temp_china_y)\n    \n    temp_china_x = []\n    china_x = df_stages_china.select(\"Value\").collect()\n    temp_china_x = [float(i.Value) for i in china_x]\n    print(\"temp_china_x\")\n    print(temp_china_x)\n        \n    \n    trace_1 = go.Bar({\n        'y': temp_china_y,\n        'x': temp_china_x,\n        'text': temp_china_x,\n        'name': 'China',\n        'orientation': 'h'\n    })\n    \n    figure['data'].append(trace_1)\n    \n    \n    df_stages_russia = df_stages[df_stages['CountryCode'] == 'RUS']\n    print(\"df_stages_russia\")\n    print(df_stages_russia.head(5))\n    \n    temp_russia_y = []\n    russia_y = df_stages_russia.select(\"Year\").collect()\n    temp_russia_y = [int(i.Year) for i in russia_y]\n    print(\"temp_russia_y\")\n    print(temp_russia_y)\n    \n    temp_russia_x = []\n    russia_x = df_stages_russia.select(\"Value\").collect()\n    temp_russia_x = [float(i.Value) for i in russia_x]\n    print(\"temp_russia_x\")\n    print(temp_russia_x)\n   \n    trace_2 = go.Bar({\n        'y': temp_russia_y,\n        'x': temp_russia_x,\n        'text': temp_russia_x,\n        'name': 'Russia',\n        'orientation': 'h'\n    })\n    \n    figure['data'].append(trace_2)\n    \n    df_stages_usa = df_stages[df_stages['CountryCode'] == 'USA']\n    print(\"df_stages_usa\")\n    print(df_stages_usa.head(5))\n    \n    temp_usa_y = []\n    usa_y = df_stages_usa.select(\"Year\").collect()\n    temp_usa_y = [int(i.Year) for i in usa_y]\n    print(\"temp_usa_y\")\n    print(temp_usa_y)\n    \n    temp_usa_x = []\n    usa_x = df_stages_usa.select(\"Value\").collect()\n    temp_usa_x = [float(i.Value) for i in usa_x]\n    print(\"temp_usa_x\")\n    print(temp_usa_x)\n          \n    trace_3= go.Bar({\n        'y': temp_usa_y,\n        'x': temp_usa_x,\n        'text': temp_usa_x,\n        'name': 'USA',\n        'orientation': 'h'\n    })\n    \n    \n    figure['data'].append(trace_3)\n    \n    title = df_stages['IndicatorName'].iloc[0]\n\n    figure['layout']['title'] = \"Mortality Rate, infant (per 1000 live births)\"\n    figure['layout']['xaxis'] = {'title': 'Value'}\n    figure['layout']['yaxis'] = {'title': 'Years'}\n    figure['layout']['hovermode'] = 'closest'\n    return figure\n    plot_str = plot(figure)\n    print('%%angular <div style=\"height: %ipx; width: %spx\"> %s </div>' % (500, 500, plot_str))\n    #plot(figure)\n    \n#df_stage_health_1 = stage_prep(chosen_indicators[0])\n#plot_barchart(df_stage_health_1)","user":"nbuser","dateUpdated":"2018-12-18T13:45:08-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1544980725853_-245131392","id":"20181216-121845_582629737","dateCreated":"2018-12-16T12:18:45-0500","dateStarted":"2018-12-18T13:45:08-0500","dateFinished":"2018-12-18T13:45:08-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:217"},{"title":"Function to plot Line chart","text":"%pyspark\ndef plot_line(df_stages):\n    \n    # Initializing figure. If we initialize it outside of function then new data will get appended with old data and \n    # plot will show all the data including new and old. To avoid that repetation of data in figure, we initialize it inside.\n    figure ={\n    'data':[],\n    'layout':{}\n    }\n    \n    # Creating stage for each country\n    df_stages_china = df_stages[df_stages['CountryCode'] == 'CHN']\n    \n    print(\"df_stages_china\")\n    print(df_stages_china.head(5))\n    \n    temp_china_y = []\n    china_y = df_stages_china.select(\"Year\").collect()\n    temp_china_y = [int(i.Year) for i in china_y]\n    print(\"temp_china_y\")\n    print(temp_china_y)\n    \n    temp_china_x = []\n    china_x = df_stages_china.select(\"Value\").collect()\n    temp_china_x = [float(i.Value) for i in china_x]\n    print(\"temp_china_x\")\n    print(temp_china_x)\n    \n    trace_1 = go.Scatter({\n        'x': temp_china_y,\n        'y': temp_china_x,\n        'connectgaps': True,\n        'text': temp_china_x,\n        'name': 'China'\n    })\n    \n    figure['data'].append(trace_1)\n    \n    df_stages_russia = df_stages[df_stages['CountryCode'] == 'RUS']\n    print(\"df_stages_russia\")\n    print(df_stages_russia.head(5))\n    \n    temp_russia_y = []\n    russia_y = df_stages_russia.select(\"Year\").collect()\n    temp_russia_y = [int(i.Year) for i in russia_y]\n    print(\"temp_russia_y\")\n    print(temp_russia_y)\n    \n    temp_russia_x = []\n    russia_x = df_stages_russia.select(\"Value\").collect()\n    temp_russia_x = [float(i.Value) for i in russia_x]\n    print(\"temp_russia_x\")\n    print(temp_russia_x)\n    \n   \n    trace_2 = go.Scatter({\n        'x': temp_russia_y,\n        'y': temp_russia_x,\n        'connectgaps': True,\n        'text': temp_russia_x,\n        'name': 'Russia'\n    })\n    \n    figure['data'].append(trace_2)\n    \n    df_stages_usa = df_stages[df_stages['CountryCode'] == 'USA']\n    print(\"df_stages_usa\")\n    print(df_stages_usa.head(5))\n    \n    temp_usa_y = []\n    usa_y = df_stages_usa.select(\"Year\").collect()\n    temp_usa_y = [int(i.Year) for i in usa_y]\n    print(\"temp_usa_y\")\n    print(temp_usa_y)\n    \n    temp_usa_x = []\n    usa_x = df_stages_usa.select(\"Value\").collect()\n    temp_usa_x = [float(i.Value) for i in usa_x]\n    print(\"temp_usa_x\")\n    print(temp_usa_x)\n    \n          \n    trace_3= go.Scatter({\n        'x': temp_usa_y,\n        'y': temp_usa_x,\n        'connectgaps': True,\n        'text': temp_usa_x,\n        'name': 'USA'\n    })\n    \n    figure['data'].append(trace_3)\n    \n    title = df_stages['IndicatorName'].iloc[0]\n    \n    figure['layout']['title'] = 'Mortality rate, infant (per 1,000 live births)'\n    figure['layout']['xaxis'] = {'title': 'Years'}\n    figure['layout']['yaxis'] = {'title': 'Value'}\n    figure['layout']['hovermode'] = 'closest'\n    \n    # iplot(figure, validate =False)\n    #plot_str = plot(figure)\n    #print('%%angular <div style=\"height: %ipx; width: %spx\"> %s </div>' % (500, 500, plot_str))\n    #plot(figure)\n    return figure\n    \n#df_stage_health_1 = stage_prep(chosen_indicators[0])\n#plot_line(df_stage_health_1)","user":"nbuser","dateUpdated":"2018-12-18T13:45:17-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1544982228417_672419758","id":"20181216-124348_703230206","dateCreated":"2018-12-16T12:43:48-0500","dateStarted":"2018-12-18T13:45:17-0500","dateFinished":"2018-12-18T13:45:17-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:218"},{"text":"%md\n#### Analysis on Economy\n##### We know that GDP measures an economy's output and therefore it is measure of size of an economy. The below bar chart shows that USA has been always higher GDP then Russia and China or we can say it is duble size. But, the anohter important point to notice that annual GDP growth of China has always been double then USA. Also, Russia too lags behind China in this factor.","user":"nbuser","dateUpdated":"2018-12-18T13:45:26-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Analysis on Economy</h4>\n<h5>We know that GDP measures an economy&rsquo;s output and therefore it is measure of size of an economy. The below bar chart shows that USA has been always higher GDP then Russia and China or we can say it is duble size. But, the anohter important point to notice that annual GDP growth of China has always been double then USA. Also, Russia too lags behind China in this factor.</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1544993426408_1796623080","id":"20181216-155026_1840233807","dateCreated":"2018-12-16T15:50:26-0500","dateStarted":"2018-12-18T13:45:26-0500","dateFinished":"2018-12-18T13:45:26-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:219"},{"text":"%pyspark\nimport plotly.plotly as py \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot\nimport plotly.graph_objs as go\ndf_stage_ec_1 = stage_prep(chosen_indicators[10])\nfigure_economy = plot_barchart(df_stage_ec_1)\nplot(figure_economy, filename='Economy-Compare')\n\ndf_stage_ec_2 = stage_prep(chosen_indicators[12])\nfigure_economy = plot_barchart(df_stage_ec_2)\nplot(figure_economy, filename='Economy-Compare-2')\n\ndf_stage_ec_3 = stage_prep(chosen_indicators[14])\nfigure_economy = plot_barchart(df_stage_ec_3)\nplot(figure_economy, filename='Economy-Compare-3')","user":"nbuser","dateUpdated":"2018-12-18T13:45:31-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1989', Value=u'309.263385215471'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1990', Value=u'316.224430421825'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1991', Value=u'331.474915998499'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1992', Value=u'364.759664140764'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1993', Value=u'375.814293801228')]\ntemp_china_y\n[1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]\ntemp_china_x\n[309.263385215471, 316.224430421825, 331.474915998499, 364.759664140764, 375.814293801228, 471.760881219945, 607.568583122257, 707.029771302305, 778.943905725537, 825.547957082076, 869.654882082718, 954.552291730423, 1047.4778628689, 1141.75764437513, 1280.60285480797, 1498.1737956253198, 1740.0967263801099, 2082.18336250102, 2673.2941909354, 3441.2213545702098, 3800.4745416127703, 4514.9405201338, 5574.18709336902, 6264.64387793993, 6991.85386564447, 7590.01644054361]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1989', Value=u'3428.76201759713'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1990', Value=u'3485.1122022467'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1991', Value=u'3485.05600012759'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1992', Value=u'3095.6597791412'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1993', Value=u'2929.46211857553')]\ntemp_russia_y\n[1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]\ntemp_russia_x\n[3428.76201759713, 3485.1122022467, 3485.05600012759, 3095.6597791412, 2929.46211857553, 2663.3945990755, 2665.73972189559, 2643.8976964978697, 2737.55666234068, 1834.8469373328699, 1330.75146395036, 1771.58660190996, 2100.3623859404197, 2375.05904394498, 2975.1327783492497, 4102.3722935487895, 5323.47387655593, 6920.194397836079, 9101.256706088929, 11635.2742379874, 8562.81369695399, 10674.997202418399, 13323.883375436399, 14078.8305693118, 14487.279870258799, 12735.9184024927]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1989', Value=u'22922.4370895271'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1990', Value=u'23954.4793548671'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1991', Value=u'24405.164814748903'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1992', Value=u'25492.951651761698'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita (current US$)', IndicatorCode=u'NY.GDP.PCAP.CD', Year=u'1993', Value=u'26464.852511744')]\ntemp_usa_y\n[1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]\ntemp_usa_x\n[22922.4370895271, 23954.4793548671, 24405.164814748903, 25492.951651761698, 26464.852511744, 27776.635528226, 28782.175020091803, 30068.2309182833, 31572.6902298492, 32949.1977640346, 34620.928899082595, 36449.855115534905, 37273.6181034176, 38166.0378407812, 39677.1983481058, 41921.8097617892, 44307.9205848603, 46437.067117306506, 48061.5376613353, 48401.4273403899, 47001.555349681796, 48374.056456596605, 49781.357490134, 51456.658728035305, 52980.043626311905, 54629.495167891204]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Economy-Compare` didn't end with .html. Adding .html to the end of your file.\n\ndf_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1990', Value=u'2.4199330422995002'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1991', Value=u'7.78701332414924'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1992', Value=u'12.8845122629304'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1993', Value=u'12.6353277521992'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1994', Value=u'11.807189359946802')]\ntemp_china_y\n[1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]\ntemp_china_x\n[2.4199330422995002, 7.78701332414924, 12.8845122629304, 12.6353277521992, 11.807189359946802, 9.79441294250833, 8.77857313758949, 8.11470613859737, 6.82353031718317, 6.690382462313201, 7.578263714019131, 7.5145661497951695, 8.36244355423672, 9.33683165271026, 9.42380525566347, 10.6994222027784, 12.0607563829684, 13.6001082429407, 9.06311819938135, 8.69159264560469, 10.0986898480121, 8.96116548868552, 7.22658150353186, 7.15347486099789, 6.726720880361531]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1990', Value=u'-3.37349524092147'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1991', Value=u'-5.259047967489309'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1992', Value=u'-14.5684368618735'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1993', Value=u'-8.56461483186493'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1994', Value=u'-12.4613051322235')]\ntemp_russia_y\n[1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]\ntemp_russia_x\n[-3.37349524092147, -5.259047967489309, -14.5684368618735, -8.56461483186493, -12.4613051322235, -4.16919294193015, -3.45966568798525, 1.56777255450102, -5.1431304115497305, 6.72979329902662, 10.4635978585034, 5.538679624683, 5.2266651766584005, 7.78378300850886, 7.608324127870179, 6.782759189482079, 8.50801838457855, 8.72086010964976, 5.29421202539513, -7.8486397276975195, 4.456827156748799, 4.18291649467722, 3.23165999150883, 1.12524870344488, -1.13939206046742]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1990', Value=u'0.7745162001909309'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1991', Value=u'-1.40047356445749'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1992', Value=u'2.1291144843286802'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1993', Value=u'1.39986184310403'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GDP per capita growth (annual %)', IndicatorCode=u'NY.GDP.PCAP.KD.ZG', Year=u'1994', Value=u'2.7696245956212504')]\ntemp_usa_y\n[1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]\ntemp_usa_x\n[0.7745162001909309, -1.40047356445749, 2.1291144843286802, 1.39986184310403, 2.7696245956212504, 1.503065305429, 2.5953052481089602, 3.23658668253634, 3.23939248122606, 3.48993353202123, 2.94029177499525, -0.018489777756713, 0.8461259531976, 1.92695687570385, 2.82965348869607, 2.39704601602841, 1.6814164585622, 0.815188220500147, -1.23028216873425, -3.62412411472206, 1.6782715302411597, 0.827494031110177, 1.54240371429218, 1.4488775129190001, 1.63053284771628]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Economy-Compare-2` didn't end with .html. Adding .html to the end of your file.\n\ndf_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1990', Value=u'32.43'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1993', Value=u'35.5'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1996', Value=u'35.7'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1999', Value=u'39.23'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'2002', Value=u'42.59')]\ntemp_china_y\n[1990, 1993, 1996, 1999, 2002, 2005, 2008, 2010]\ntemp_china_x\n[32.43, 35.5, 35.7, 39.23, 42.59, 42.48, 42.63, 42.06]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1988', Value=u'23.8'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1993', Value=u'48.38'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1996', Value=u'46.1'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1997', Value=u'38.41'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1998', Value=u'38.14')]\ntemp_russia_y\n[1988, 1993, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010]\ntemp_russia_x\n[23.8, 48.38, 46.1, 38.41, 38.14, 37.44, 37.09, 39.6, 37.28, 40.8, 40.92, 41.37, 41.54, 42.33, 41.42, 39.69, 40.94]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1991', Value=u'38.36'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1994', Value=u'40.35'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'1997', Value=u'40.86'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'2000', Value=u'40.46'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'GINI index (World Bank estimate)', IndicatorCode=u'SI.POV.GINI', Year=u'2004', Value=u'40.62')]\ntemp_usa_y\n[1991, 1994, 1997, 2000, 2004, 2007, 2010]\ntemp_usa_x\n[38.36, 40.35, 40.86, 40.46, 40.62, 41.75, 40.46]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Economy-Compare-3` didn't end with .html. Adding .html to the end of your file.\n\n'file:///home/aka398/Economy-Compare-3.html'\n"}]},"apps":[],"jobName":"paragraph_1545153235974_1698832751","id":"20181218-121355_1511985386","dateCreated":"2018-12-18T12:13:55-0500","dateStarted":"2018-12-18T13:45:31-0500","dateFinished":"2018-12-18T13:51:38-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:220"},{"text":"%md\r\n### Employment\r\n##### Here, Very good thing to make a note that China has provided Employment to the most of the population. It's unemployment rate is never goes up then 5%. If you look at carefully the bar chart shows that, Russia has higher unemployment rate before year 2005 and lower afterwards. Where as USA had lower unemployment before year 2005 and higher afterwards. The data shows that unemployed labors are more in USA then Russia and China.","user":"nbuser","dateUpdated":"2018-12-18T13:53:00-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Employment</h3>\n<h5>Here, Very good thing to make a note that China has provided Employment to the most of the population. It&rsquo;s unemployment rate is never goes up then 5%. If you look at carefully the bar chart shows that, Russia has higher unemployment rate before year 2005 and lower afterwards. Where as USA had lower unemployment before year 2005 and higher afterwards. The data shows that unemployed labors are more in USA then Russia and China.</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1545153351919_-939072462","id":"20181218-121551_1503568173","dateCreated":"2018-12-18T12:15:51-0500","dateStarted":"2018-12-18T13:53:00-0500","dateFinished":"2018-12-18T13:53:00-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:221"},{"text":"%pyspark\nimport plotly.plotly as py \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot\nimport plotly.graph_objs as go\ndf_stage_emp_1 = stage_prep(chosen_indicators[4])\nfigure_employment = plot_line(df_stage_emp_1)\nplot(figure_employment, filename='Employment-Compare' )","user":"nbuser","dateUpdated":"2018-12-18T13:53:03-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1991', Value=u'4.90000009536743'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1992', Value=u'4.40000009536743'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1993', Value=u'4.30000019073486'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1994', Value=u'4.30000019073486'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1995', Value=u'4.5')]\ntemp_china_y\n[1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]\ntemp_china_x\n[4.90000009536743, 4.40000009536743, 4.30000019073486, 4.30000019073486, 4.5, 4.59999990463257, 4.59999990463257, 4.699999809265139, 4.699999809265139, 4.5, 4.5, 4.40000009536743, 4.30000019073486, 4.30000019073486, 4.099999904632569, 4.0, 3.79999995231628, 4.40000009536743, 4.40000009536743, 4.19999980926514, 4.30000019073486, 4.5, 4.59999990463257, 4.699999809265139]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1991', Value=u'12.1999998092651'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1992', Value=u'5.199999809265139'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1993', Value=u'5.900000095367429'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1994', Value=u'8.10000038146973'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1995', Value=u'9.39999961853027')]\ntemp_russia_y\n[1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]\ntemp_russia_x\n[12.1999998092651, 5.199999809265139, 5.900000095367429, 8.10000038146973, 9.39999961853027, 9.69999980926514, 11.8000001907349, 13.3000001907349, 13.0, 10.6000003814697, 9.0, 7.900000095367429, 8.199999809265138, 7.800000190734861, 7.099999904632571, 7.099999904632571, 6.0, 6.199999809265139, 8.300000190734862, 7.300000190734861, 6.5, 5.5, 5.5, 5.09999990463257]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1991', Value=u'6.900000095367429'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1992', Value=u'7.599999904632571'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1993', Value=u'7.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1994', Value=u'6.199999809265139'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Unemployment, total (% of total labor force)', IndicatorCode=u'SL.UEM.TOTL.ZS', Year=u'1995', Value=u'5.699999809265139')]\ntemp_usa_y\n[1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]\ntemp_usa_x\n[6.900000095367429, 7.599999904632571, 7.0, 6.199999809265139, 5.699999809265139, 5.5, 5.0, 4.59999990463257, 4.30000019073486, 4.099999904632569, 4.800000190734861, 5.900000095367429, 6.099999904632571, 5.599999904632571, 5.199999809265139, 4.699999809265139, 4.699999809265139, 5.900000095367429, 9.39999961853027, 9.69999980926514, 9.0, 8.199999809265138, 7.400000095367429, 6.199999809265139]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Employment-Compare` didn't end with .html. Adding .html to the end of your file.\n\n'file:///home/aka398/Employment-Compare.html'\n"}]},"apps":[],"jobName":"paragraph_1545155024366_-502003766","id":"20181218-124344_1530342725","dateCreated":"2018-12-18T12:43:44-0500","dateStarted":"2018-12-18T13:53:03-0500","dateFinished":"2018-12-18T13:55:22-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:222"},{"text":"%md\n#### Demography\n##### In terms of Life Expectancy, all of the three has same numbers by the end of 2013. Also, notice the steep increase in China's life expectancy after year 1962.","user":"nbuser","dateUpdated":"2018-12-18T13:55:55-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Demography</h4>\n<h5>In terms of Life Expectancy, all of the three has same numbers by the end of 2013. Also, notice the steep increase in China&rsquo;s life expectancy after year 1962.</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1545155101663_-131551872","id":"20181218-124501_527430672","dateCreated":"2018-12-18T12:45:01-0500","dateStarted":"2018-12-18T13:55:55-0500","dateFinished":"2018-12-18T13:55:55-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:223"},{"text":"%pyspark\nimport plotly.plotly as py \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot\nimport plotly.graph_objs as go\ndf_stage_dg_1 = stage_prep(chosen_indicators[31])\nfigure_demography = plot_line(df_stage_dg_1)\nplot(figure_demography, filename='Demography-Compare' )","user":"nbuser","dateUpdated":"2018-12-18T13:56:00-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":true},"editorMode":"ace/mode/python","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1960', Value=u'43.4658048780488'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1961', Value=u'43.780756097560996'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1962', Value=u'44.7126585365854'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1963', Value=u'46.331'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1964', Value=u'48.5808780487805')]\ntemp_china_y\n[1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]\ntemp_china_x\n[43.4658048780488, 43.780756097560996, 44.7126585365854, 46.331, 48.5808780487805, 51.2914390243903, 54.2041219512195, 57.012390243902395, 59.4688536585366, 61.45117073170729, 62.906243902439, 63.872243902439, 64.5214634146342, 65.0032926829268, 65.3792926829268, 65.69958536585371, 65.9944390243903, 66.2640487804878, 66.5137317073171, 66.7622926829268, 67.0236097560976, 67.2976585365854, 67.57209756097559, 67.836512195122, 68.0929024390244, 68.34129268292679, 68.5821707317073, 68.8155365853658, 69.0423902439024, 69.262243902439, 69.4715609756098, 69.6613170731707, 69.832, 69.9906585365854, 70.14782926829271, 70.3291707317073, 70.5628292682927, 70.86390243902441, 71.2348780487805, 71.6687073170732, 72.1407317073171, 72.6197804878049, 73.06960975609759, 73.4650975609756, 73.7937073170732, 74.05390243902441, 74.2563170731707, 74.4240731707317, 74.5798292682927, 74.73163414634149, 74.8850243902439, 75.042, 75.199512195122, 75.3530243902439]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1960', Value=u'66.0552926829268'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1961', Value=u'66.5970243902439'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1962', Value=u'67.0214146341464'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1963', Value=u'67.3399024390244'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1964', Value=u'67.566512195122')]\ntemp_russia_y\n[1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]\ntemp_russia_x\n[66.0552926829268, 66.5970243902439, 67.0214146341464, 67.3399024390244, 67.566512195122, 67.7188536585366, 67.812512195122, 67.86014634146339, 67.87434146341461, 67.8671219512195, 68.1336585365854, 68.3765853658537, 68.3085365853659, 68.2946341463415, 68.320243902439, 67.7239024390244, 67.4875609756098, 67.3763414634146, 67.3909756097561, 67.11439024390239, 67.0339024390244, 67.2639024390244, 67.8060975609756, 67.6526829268293, 67.2026829268293, 67.8568292682927, 69.38975609756099, 69.44, 69.4643902439024, 69.1717073170732, 68.9024390243902, 68.47439024390239, 66.87317073170729, 64.9358536585366, 64.46707317073171, 65.2212195121951, 66.1941463414634, 66.9507317073171, 66.7839024390244, 66.0436585365854, 65.3414634146341, 65.4878048780488, 65.0853658536585, 65.00756097560979, 65.4212195121951, 65.47, 66.6431707317073, 67.4975609756098, 67.8487804878049, 68.60487804878049, 68.8560975609756, 69.6585365853659, 70.36585365853661, 71.0731707317073]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1960', Value=u'69.77073170731711'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1961', Value=u'70.27073170731711'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1962', Value=u'70.119512195122'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1963', Value=u'69.91707317073171'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Life expectancy at birth, total (years)', IndicatorCode=u'SP.DYN.LE00.IN', Year=u'1964', Value=u'70.1658536585366')]\ntemp_usa_y\n[1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]\ntemp_usa_x\n[69.77073170731711, 70.27073170731711, 70.119512195122, 69.91707317073171, 70.1658536585366, 70.2146341463415, 70.2121951219512, 70.5609756097561, 69.9512195121951, 70.5073170731708, 70.8073170731707, 71.1073170731707, 71.1560975609756, 71.35609756097558, 71.95609756097559, 72.60487804878049, 72.85609756097558, 73.25609756097559, 73.35609756097558, 73.8048780487805, 73.65853658536591, 74.0073170731707, 74.3609756097561, 74.4634146341463, 74.5634146341464, 74.5634146341464, 74.6146341463415, 74.7658536585366, 74.7658536585366, 75.0170731707317, 75.2146341463415, 75.3658536585366, 75.6421951219512, 75.41951219512201, 75.5743902439025, 75.62195121951221, 75.9965853658537, 76.4292682926829, 76.58048780487809, 76.58292682926829, 76.6365853658537, 76.7365853658537, 76.83658536585371, 76.9878048780488, 77.3390243902439, 77.3390243902439, 77.5878048780488, 77.8390243902439, 77.9390243902439, 78.090243902439, 78.5414634146342, 78.64146341463409, 78.7414634146342, 78.84146341463409]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Demography-Compare` didn't end with .html. Adding .html to the end of your file.\n\n'file:///home/aka398/Demography-Compare.html'\n"}]},"apps":[],"jobName":"paragraph_1545156306299_676917770","id":"20181218-130506_559892946","dateCreated":"2018-12-18T13:05:06-0500","dateStarted":"2018-12-18T13:56:00-0500","dateFinished":"2018-12-18T13:57:48-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:224"},{"text":"%md\r\n#### Health\r\n##### From findings below we can see that Russia and China are spending 4 - 6 percentage of GDP behind Health Expenditure while USA is spending 13 - 17 percent. From this data we can infere that this can be the reason behind low infant mortality rate in USA then China and Russia. However, more important thing to notice over here is, in 2015 all three countries have almost same infant mortality rate. Which suggest that there are other factors too effecting infant mortality for example, Birth attended by skilled health staff.","user":"nbuser","dateUpdated":"2018-12-18T14:00:14-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Health</h4>\n<h5>From findings below we can see that Russia and China are spending 4 - 6 percentage of GDP behind Health Expenditure while USA is spending 13 - 17 percent. From this data we can infere that this can be the reason behind low infant mortality rate in USA then China and Russia. However, more important thing to notice over here is, in 2015 all three countries have almost same infant mortality rate. Which suggest that there are other factors too effecting infant mortality for example, Birth attended by skilled health staff.</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1545156433431_464090855","id":"20181218-130713_942772916","dateCreated":"2018-12-18T13:07:13-0500","dateStarted":"2018-12-18T14:00:14-0500","dateFinished":"2018-12-18T14:00:14-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:225"},{"text":"%pyspark\nimport plotly.plotly as py \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot\nimport plotly.graph_objs as go\ndf_stage_health_1 = stage_prep(chosen_indicators[0])\nfigure_health = plot_barchart(df_stage_health_1)\nplot(figure_health, filename='Health-Compare' )\n","user":"nbuser","dateUpdated":"2018-12-18T13:59:51-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":true},"editorMode":"ace/mode/python","title":false,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1970', Value=u'80.4'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1971', Value=u'76.8'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1972', Value=u'73.3'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1973', Value=u'69.7'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1974', Value=u'66.2')]\ntemp_china_y\n[1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015]\ntemp_china_x\n[80.4, 76.8, 73.3, 69.7, 66.2, 62.6, 59.1, 55.8, 52.9, 50.2, 48.0, 46.1, 44.6, 43.4, 42.6, 42.2, 42.0, 42.0, 42.2, 42.2, 42.1, 41.8, 41.2, 40.2, 39.0, 37.7, 36.4, 35.0, 33.5, 31.9, 30.2, 28.3, 26.2, 24.2, 22.2, 20.3, 18.7, 17.2, 15.8, 14.6, 13.5, 12.5, 11.5, 10.6, 9.8, 9.2]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1970', Value=u'35.4'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1971', Value=u'34.1'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1972', Value=u'32.9'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1973', Value=u'31.8'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1974', Value=u'30.8')]\ntemp_russia_y\n[1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015]\ntemp_russia_x\n[35.4, 34.1, 32.9, 31.8, 30.8, 29.9, 29.2, 28.7, 28.2, 27.8, 27.3, 26.9, 26.5, 26.0, 25.6, 25.0, 24.3, 23.5, 22.8, 22.2, 21.9, 21.9, 22.0, 22.1, 22.2, 22.2, 22.0, 21.6, 21.1, 20.5, 19.7, 18.8, 17.7, 16.6, 15.4, 14.4, 13.3, 12.4, 11.6, 10.9, 10.3, 9.8, 9.3, 8.9, 8.5, 8.2]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1970', Value=u'19.9'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1971', Value=u'19.1'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1972', Value=u'18.3'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1973', Value=u'17.5'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Mortality rate, infant (per 1,000 live births)', IndicatorCode=u'SP.DYN.IMRT.IN', Year=u'1974', Value=u'16.7')]\ntemp_usa_y\n[1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015]\ntemp_usa_x\n[19.9, 19.1, 18.3, 17.5, 16.7, 16.0, 15.2, 14.5, 13.8, 13.2, 12.6, 12.1, 11.7, 11.2, 10.9, 10.6, 10.4, 10.2, 10.0, 9.7, 9.4, 9.1, 8.8, 8.5, 8.2, 8.0, 7.7, 7.5, 7.3, 7.2, 7.1, 7.0, 6.9, 6.8, 6.9, 6.8, 6.7, 6.6, 6.5, 6.4, 6.3, 6.1, 6.1, 5.9, 5.7, 5.6]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Health-Compare` didn't end with .html. Adding .html to the end of your file.\n\n'file:///home/aka398/Health-Compare.html'\n"}]},"apps":[],"jobName":"paragraph_1545156501139_747943599","id":"20181218-130821_1498915062","dateCreated":"2018-12-18T13:08:21-0500","dateStarted":"2018-12-18T13:59:51-0500","dateFinished":"2018-12-18T14:00:37-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:226"},{"text":"%md\n#### Energy\n##### Here you will notice that CO2 Emissions per capita in Russia and USA has higher then China. But, one important factor come into play over here is \"Population\". China has the largest population in the world. So, when you count CO2 emission per capita, you may need to normalize the population factor. Because of that only we can not say which country has higher emissions rate.","user":"nbuser","dateUpdated":"2018-12-18T14:01:02-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Energy</h4>\n<h5>Here you will notice that CO2 Emissions per capita in Russia and USA has higher then China. But, one important factor come into play over here is &ldquo;Population&rdquo;. China has the largest population in the world. So, when you count CO2 emission per capita, you may need to normalize the population factor. Because of that only we can not say which country has higher emissions rate.</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1545156599440_470108920","id":"20181218-130959_33230652","dateCreated":"2018-12-18T13:09:59-0500","dateStarted":"2018-12-18T14:01:02-0500","dateFinished":"2018-12-18T14:01:02-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:227"},{"text":"%pyspark\nimport plotly.plotly as py \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot\nimport plotly.graph_objs as go\ndf_stage_energy_1 = stage_prep(chosen_indicators[19])\nfigure_energy = plot_barchart(df_stage_energy_1)\nplot(figure_energy, filename='Energy-Compare' )\n\n\ndf_stage_energy_2 = stage_prep(chosen_indicators[20])\nfigure_energy = plot_line(df_stage_energy_2)\nplot(figure_energy, filename='Energy-Compare-1')\n\ndf_stage_energy_3 = stage_prep(chosen_indicators[22])\nfigure_energy = plot_barchart(df_stage_energy_3)\nplot(figure_energy, filename='Energy-Compare-2')","user":"nbuser","dateUpdated":"2018-12-18T14:01:09-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":true},"editorMode":"ace/mode/python","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1992', Value=u'2.31420729031649'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1993', Value=u'2.44280065934625'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1994', Value=u'2.5659938917719303'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1995', Value=u'2.7557549663652496'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1996', Value=u'2.84430958153669')]\ntemp_china_y\n[1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011]\ntemp_china_x\n[2.31420729031649, 2.44280065934625, 2.5659938917719303, 2.7557549663652496, 2.84430958153669, 2.82056789057578, 2.67674598026467, 2.64864924664833, 2.6968624332254905, 2.74212081298895, 2.88522504139331, 3.51224542766222, 4.08013890554173, 4.4411506949345, 4.8927270979847695, 5.15356401658718, 5.31115185538876, 5.77814318390097, 6.172488876097501, 6.71030199087886]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1992', Value=u'14.0013063575651'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1993', Value=u'13.070316839482901'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1994', Value=u'11.4681014790745'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1995', Value=u'11.014687314824'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1996', Value=u'10.905807370114')]\ntemp_russia_y\n[1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011]\ntemp_russia_x\n[14.0013063575651, 13.070316839482901, 11.4681014790745, 11.014687314824, 10.905807370114, 10.3359776483444, 10.1465193513145, 10.4199624653546, 10.628571358602901, 10.672994678176199, 10.719863136321301, 11.0956670082793, 11.1264558099453, 11.257693433759801, 11.6716086123682, 11.677438173631499, 12.0191306434285, 11.026116238178, 12.1984374262445, 12.647328232506302]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1992', Value=u'19.1455557591398'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1993', Value=u'19.3634625825738'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1994', Value=u'19.376556436840104'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1995', Value=u'19.295659859244896'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'CO2 emissions (metric tons per capita)', IndicatorCode=u'EN.ATM.CO2E.PC', Year=u'1996', Value=u'19.5278905060989')]\ntemp_usa_y\n[1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011]\ntemp_usa_x\n[19.1455557591398, 19.3634625825738, 19.376556436840104, 19.295659859244896, 19.5278905060989, 19.714275738381897, 19.615154599897, 19.747814779243104, 20.2076147591466, 19.656193212344803, 19.639195771004697, 19.5762390475548, 19.683581350362, 19.6102750390681, 19.116138823715502, 19.2374604467856, 18.489233752175103, 17.192379097866002, 17.4847921827813, 17.0202163384029]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Energy-Compare` didn't end with .html. Adding .html to the end of your file.\n\ndf_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1990', Value=u'1.25539702828855'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1991', Value=u'1.27595691520705'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1992', Value=u'1.3105179015045'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1993', Value=u'1.46721525784182'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1994', Value=u'1.8977948307359902')]\ntemp_china_y\n[1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012]\ntemp_china_x\n[1.25539702828855, 1.27595691520705, 1.3105179015045, 1.46721525784182, 1.8977948307359902, 2.00410627282655, 1.9844347225272598, 2.07362757975361, 2.17067768984605, 2.14596136087177, 2.2422874963468598, 2.63960407163651, 2.7645221445439, 2.77043094319099, 2.92311402732462, 2.99944046701054, 3.00038784264461, 3.20568656166362, 3.6790079327091, 3.6830504795051198, 3.81826539237289, 3.7429724954725097, 4.33741367182723]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1990', Value=u'5.185695082347'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1991', Value=u'5.29723785561057'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1992', Value=u'5.82703288774307'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1993', Value=u'6.17068347121482'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1994', Value=u'6.23073670327456')]\ntemp_russia_y\n[1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012]\ntemp_russia_x\n[5.185695082347, 5.29723785561057, 5.82703288774307, 6.17068347121482, 6.23073670327456, 6.49656167903941, 6.66232285727168, 6.9942454023022105, 7.048350055171139, 7.54464981365399, 7.84467862768891, 8.16022771113405, 8.242540337467249, 8.24721456269552, 8.27060442026802, 8.35614583871771, 8.41281234070147, 8.57920642439111, 8.33695810362029, 9.01774736289344, 8.45832409979833, 8.144954689452451, 8.10278641516546]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1990', Value=u'10.3024395264567'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1991', Value=u'10.8093432050001'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1992', Value=u'10.5748451415287'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1993', Value=u'10.428127331412'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Alternative and nuclear energy (% of total energy use)', IndicatorCode=u'EG.USE.COMM.CL.ZS', Year=u'1994', Value=u'10.5481376571922')]\ntemp_usa_y\n[1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012]\ntemp_usa_x\n[10.3024395264567, 10.8093432050001, 10.5748451415287, 10.428127331412, 10.5481376571922, 10.9626446765536, 10.9257486219286, 10.1151958919861, 10.4780334916652, 10.8946407233162, 10.769541481944302, 10.657695980547, 10.784514142476098, 10.6165734915592, 10.683060464315302, 10.6216803819457, 10.8934745319544, 10.8181496346743, 11.1974693201473, 11.839379440659, 11.718935649212598, 11.992341504030799, 11.962184222457099]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Energy-Compare-1` didn't end with .html. Adding .html to the end of your file.\n\ndf_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1990', Value=u'4000000.0'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1991', Value=u'11000000.0'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1992', Value=u'17000000.0'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1993', Value=u'26000000.0'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1994', Value=u'388000000.0')]\ntemp_china_y\n[1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012]\ntemp_china_x\n[4000000.0, 11000000.0, 17000000.0, 26000000.0, 388000000.0, 2968000000.0, 1524000000.0, 2823000000.0, 2748000000.0, 2915000000.0, 3058000000.0, 3218000000.0, 3351000000.0, 3525000000.0, 3822000000.0, 7438000000.0, 11099000000.0, 15691000000.0, 29822000000.0, 48043000000.0, 70235000000.0, 104600000000.0, 136197000000.0]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1990', Value=u'65000000.0'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1991', Value=u'65000000.0'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1992', Value=u'63000000.0'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1993', Value=u'60000000.0'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1994', Value=u'61000000.0')]\ntemp_russia_y\n[1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012]\ntemp_russia_x\n[65000000.0, 65000000.0, 63000000.0, 60000000.0, 61000000.0, 59000000.0, 57000000.0, 57000000.0, 58000000.0, 60000000.0, 82000000.0, 117000000.0, 179000000.0, 375000000.0, 452000000.0, 458000000.0, 512000000.0, 506000000.0, 494000000.0, 501000000.0, 545000000.0, 562000000.0, 527000000.0]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1990', Value=u'96089000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1991', Value=u'61937000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1992', Value=u'69945000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1993', Value=u'72278000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Electricity production from renewable sources, excluding hydroelectric (kWh)', IndicatorCode=u'EG.ELC.RNWX.KH', Year=u'1994', Value=u'73690000000.0')]\ntemp_usa_y\n[1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012]\ntemp_usa_x\n[96089000000.0, 61937000000.0, 69945000000.0, 72278000000.0, 73690000000.0, 70227000000.0, 71943000000.0, 69953000000.0, 69464000000.0, 73395000000.0, 77160000000.0, 72174000000.0, 81103000000.0, 81824000000.0, 86869000000.0, 93760000000.0, 103340000000.0, 112195000000.0, 134307000000.0, 153105000000.0, 178403000000.0, 207219000000.0, 234198000000.0]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Energy-Compare-2` didn't end with .html. Adding .html to the end of your file.\n\n'file:///home/aka398/Energy-Compare-2.html'\n"}]},"apps":[],"jobName":"paragraph_1545156646411_1077904913","id":"20181218-131046_236266285","dateCreated":"2018-12-18T13:10:46-0500","dateStarted":"2018-12-18T14:01:09-0500","dateFinished":"2018-12-18T14:03:24-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:228"},{"text":"%md\n### Trade\n#### Trade is also very important factor to consider while evaluating any country. WE can see that Import and Export of goods and services in all three countries shows same curve in line graph. More important thing to notice that imports of China is less then USA and exports are same by the end of the year 2013. Which shows that China is highly likely to overcome USA in Trade sector in near future.","user":"nbuser","dateUpdated":"2018-12-18T14:03:55-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Trade</h3>\n<h4>Trade is also very important factor to consider while evaluating any country. WE can see that Import and Export of goods and services in all three countries shows same curve in line graph. More important thing to notice that imports of China is less then USA and exports are same by the end of the year 2013. Which shows that China is highly likely to overcome USA in Trade sector in near future.</h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1545157615446_-71949729","id":"20181218-132655_1825152694","dateCreated":"2018-12-18T13:26:55-0500","dateStarted":"2018-12-18T14:03:55-0500","dateFinished":"2018-12-18T14:03:55-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:229"},{"text":"%pyspark\nimport plotly.plotly as py \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot\nimport plotly.graph_objs as go\ndf_stage_trd_1 = stage_prep(chosen_indicators[45])\nfigure_trade_imp = plot_line(df_stage_trd_1)\nplot(figure_trade_imp, filename='Trade-Compare' )\n\n\ndf_stage_trd_2 = stage_prep(chosen_indicators[44])\nfigure_trade_exp = plot_line(df_stage_trd_2)\nplot(figure_trade_exp, filename='Trade-Compare-1')","user":"nbuser","dateUpdated":"2018-12-18T14:04:01-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":true},"editorMode":"ace/mode/python","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1989', Value=u'44532388148.145'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1990', Value=u'49221797143.6269'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1991', Value=u'59210801393.7282'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1992', Value=u'69753532182.1036'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1993', Value=u'74628800817.8225')]\ntemp_china_y\n[1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]\ntemp_china_x\n[44532388148.145, 49221797143.6269, 59210801393.7282, 69753532182.1036, 74628800817.8225, 115563832132.456, 132301483707.953, 139007962281.398, 142422012593.79, 140427099563.962, 165932619015.982, 225149787398.531, 243553901728.86603, 295158873988.16, 413140026579.67896, 561035665957.8579, 662334793698.058, 794855394185.667, 963483404534.9979, 1144480676529.42, 1004455449395.44, 1398746054975.41, 1751317746808.02, 1818686691063.48, 1953540432551.08]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1989', Value=u'106426908449.872'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1990', Value=u'92740962907.8046'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1991', Value=u'67259259259.2592'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1992', Value=u'222111380145.278'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1993', Value=u'132673769660.071')]\ntemp_russia_y\n[1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]\ntemp_russia_x\n[106426908449.872, 92740962907.8046, 67259259259.2592, 222111380145.278, 132673769660.071, 91639498027.0393, 102419980064.237, 85589979709.6925, 91218668971.478, 66522411128.2844, 51275385865.1503, 62417348027.0174, 74250942749.4001, 84408293460.925, 102759676788.74, 130992710864.283, 164341474452.34802, 207914383435.696, 279983425068.802, 366597057083.882, 250604907310.557, 322366709584.792, 414004349557.387, 449198762637.89, 471858303677.15704]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1989', Value=u'591032000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1990', Value=u'629729000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1991', Value=u'623547000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1992', Value=u'667793000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Imports of goods and services (current US$)', IndicatorCode=u'NE.IMP.GNFS.CD', Year=u'1993', Value=u'719974000000.0')]\ntemp_usa_y\n[1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]\ntemp_usa_x\n[591032000000.0, 629729000000.0, 623547000000.0, 667793000000.0, 719974000000.0, 813425000000.0, 902571000000.0, 963966000000.0, 1055776000000.0, 1115690000000.0, 1248611000000.0, 1472630000000.0, 1395396000000.0, 1428973000000.0, 1543934000000.0, 1800677000000.0, 2030086000000.0, 2247263000000.0, 2383167000000.0, 2565009000000.0, 1983178000000.0, 2364992000000.0, 2686366000000.0, 2763844100000.0, 2771653200000.0]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Trade-Compare` didn't end with .html. Adding .html to the end of your file.\n\ndf_stages_china\n[Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1989', Value=u'39595141241.7708'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1990', Value=u'57089865948.5845'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1991', Value=u'66674216027.8746'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1992', Value=u'73411302982.7316'), Row(CountryName=u'China', CountryCode=u'CHN', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1993', Value=u'65884582299.6272')]\ntemp_china_y\n[1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]\ntemp_china_x\n[39595141241.7708, 57089865948.5845, 66674216027.8746, 73411302982.7316, 65884582299.6272, 120920788517.99, 149110852982.385, 151264102379.06198, 182883784892.27698, 183879890326.243, 195206745346.267, 249255894858.91, 266088364282.17603, 325575691675.728, 438418509121.66205, 593264305045.428, 764532662948.635, 973210926330.047, 1230719684521.85, 1444801781916.04, 1200774276575.81, 1580769579191.47, 1907306287085.04, 2049320374506.92, 2213296656767.49]\ndf_stages_russia\n[Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1989', Value=u'110935025003.812'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1990', Value=u'93864123358.2451'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1991', Value=u'68740740740.7407'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1992', Value=u'286864406779.661'), Row(CountryName=u'Russian Federation', CountryCode=u'RUS', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1993', Value=u'166221968543.886')]\ntemp_russia_y\n[1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]\ntemp_russia_x\n[110935025003.812, 93864123358.2451, 68740740740.7407, 286864406779.661, 166221968543.886, 109667054790.09, 115848931221.619, 102134384267.20801, 100138288677.615, 84595569294.1783, 84670999187.6523, 114429434767.15302, 113116215289.681, 121649122807.018, 151697510751.987, 203415480735.85602, 268957446507.615, 333908278474.495, 392044033024.769, 520003701781.281, 341583596930.095, 445513189914.35, 576568206028.8, 595506455943.294, 595057338765.151]\ndf_stages_usa\n[Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1989', Value=u'504291000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1990', Value=u'551874000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1991', Value=u'594932000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1992', Value=u'633053000000.0'), Row(CountryName=u'United States', CountryCode=u'USA', IndicatorName=u'Exports of goods and services (current US$)', IndicatorCode=u'NE.EXP.GNFS.CD', Year=u'1993', Value=u'654800000000.0')]\ntemp_usa_y\n[1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]\ntemp_usa_x\n[504291000000.0, 551874000000.0, 594932000000.0, 633053000000.0, 654800000000.0, 720939000000.0, 812813000000.0, 867590000000.0, 953806000000.0, 952981000000.0, 991980000000.0, 1096835000000.0, 1026713000000.0, 1002509000000.0, 1040279000000.0, 1181507000000.0, 1308901000000.0, 1476316000000.0, 1664625000000.0, 1841942000000.0, 1587742000000.0, 1852335000000.0, 2106371000000.0, 2198182300000.0, 2263253700000.0]\n/home/aka398/python2.7/lib/python2.7/site-packages/plotly/offline/offline.py:621: UserWarning:\n\nYour filename `Trade-Compare-1` didn't end with .html. Adding .html to the end of your file.\n\n'file:///home/aka398/Trade-Compare-1.html'\n"}]},"apps":[],"jobName":"paragraph_1545157657185_405215528","id":"20181218-132737_1618383243","dateCreated":"2018-12-18T13:27:37-0500","dateStarted":"2018-12-18T14:04:01-0500","dateFinished":"2018-12-18T14:05:30-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:230"},{"text":"%md\n### Conclusion\n##### 1) After doing deep analysis of USA, China and Russia on different factors, we can say that, China is chasing or competing USA faster then Russia.\n##### 2) From above analysis we can say that, Russia is behind China in providing employment, GDP annual growth, electricity production from renewable energy sources, life expectancy and imports and exports of goods and services. While China is either competing or equal to USA in most of this sectors.\n##### 3) Also, all of the three countries are almost same on sectors like infant mortality rate, GINI index and access to electricity.\n##### 4) Overall, China is ahead of Russia in the race of becoming next super power.\n","user":"nbuser","dateUpdated":"2018-12-19T08:22:48-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1545157851651_143245855","id":"20181218-133051_951770812","dateCreated":"2018-12-18T13:30:51-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:231","dateFinished":"2018-12-19T08:22:49-0500","dateStarted":"2018-12-19T08:22:48-0500","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Conclusion</h3>\n<h5>1) After doing deep analysis of USA, China and Russia on different factors, we can say that, China is chasing or competing USA faster then Russia.</h5>\n<h5>2) From above analysis we can say that, Russia is behind China in providing employment, GDP annual growth, electricity production from renewable energy sources, life expectancy and imports and exports of goods and services. While China is either competing or equal to USA in most of this sectors.</h5>\n<h5>3) Also, all of the three countries are almost same on sectors like infant mortality rate, GINI index and access to electricity.</h5>\n<h5>4) Overall, China is ahead of Russia in the race of becoming next super power.</h5>\n</div>"}]}},{"text":"%md\n","user":"nbuser","dateUpdated":"2018-12-19T08:22:48-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1545225768081_672033032","id":"20181219-082248_225420138","dateCreated":"2018-12-19T08:22:48-0500","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2178"}],"name":"Which is most likely Super power country","id":"2E1393T1M","angularObjects":{"2CFXK5J4Y:shared_process":[],"2CF295UYG:shared_process":[],"2CD6ZRPDJ:shared_process":[],"2CFG6Y8G3:shared_process":[],"2CFJKQVBN:shared_process":[],"2CGYXR37V:shared_process":[],"2CDY97F39:shared_process":[],"2CEC5KMFB:shared_process":[],"2CFFWS5P3:shared_process":[],"2CDM4T1EH:shared_process":[],"2CG949ZHZ:shared_process":[],"2CEJ86HV3:shared_process":[],"2CFGNABPQ:shared_process":[],"2CEZV3CHG:shared_process":[],"2CDUTWP3P:shared_process":[],"2CFXDXWCE:shared_process":[],"2CEZMWG72:shared_process":[],"2CFWFHNZR:shared_process":[],"2CG23YGEZ:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}